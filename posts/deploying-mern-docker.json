{
  "title": "Deploying MERN with Docker",
  "date": "2025-01-15",
  "tags": ["MERN", "Docker", "AWS", "DevOps"],
  "content": "<h1 style=\"color:#2563eb; font-size:2.5rem; font-weight:bold; margin-bottom:1.5rem;\">Deploying a MERN Stack Application with Docker</h1><p style=\"color:#374151; font-size:1.1rem; line-height:1.7; margin-bottom:1rem;\">This post demonstrates how to containerize a MERN (MongoDB, Express, React, Node.js) application using Docker for rapid development and easy deployment on AWS.</p><img alt=\"MERN Docker Deployment\" src=\"https://images.unsplash.com/photo-1605379399642-870262d3d051?w=800&h=400&fit=crop\" style=\"max-width:100%; border-radius:0.5rem; margin:1.5rem 0; box-shadow:0 4px 6px rgba(0, 0, 0, 0.1);\"/><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Prerequisites</h2><ul style=\"margin-bottom:1rem;\"><li>Node.js and npm installed</li><li>Docker and Docker Compose installed</li><li>Basic understanding of MERN stack</li></ul><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Project Structure</h2><pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\">mern-app/\n├── client/          # React frontend\n│   ├── Dockerfile\n├── server/          # Node.js backend\n│   ├── Dockerfile\n├── docker-compose.yml</code></pre><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Sample Dockerfile (Frontend)</h2><pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\"># client/Dockerfile\nFROM node:18-alpine as build\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci\nCOPY . .\nRUN npm run build\nFROM nginx:alpine\nCOPY --from=build /app/build /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]</code></pre><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Sample Dockerfile (Backend)</h2><pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\"># server/Dockerfile\nFROM node:18-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci\nCOPY . .\nEXPOSE 5000\nCMD [\"node\", \"server.js\"]</code></pre><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Docker Compose Configuration</h2><pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\">version: '3.8'\nservices:\n  frontend:\n    build: ./client\n    ports:\n      - \"3000:80\"\n    depends_on:\n      - backend\n  backend:\n    build: ./server\n    ports:\n      - \"5000:5000\"\n    environment:\n      - MONGO_URI=mongodb://mongodb:27017/mernapp\n    depends_on:\n      - mongodb\n  mongodb:\n    image: mongo:5.0\n    ports:\n      - \"27017:27017\"\n    volumes:\n      - data:/data/db\nvolumes:\n  data:</code></pre><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Pushing to AWS ECR</h2><ol><li>\nLogin to ECR:\n<pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\">aws ecr get-login-password | docker login --username AWS --password-stdin &lt;account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com</code></pre></li><li>\nBuild and push your images:\n<pre style=\"background-color:#1f2937; color:#f9fafb; padding:1rem; border-radius:0.5rem; overflow-x:auto; margin-bottom:1rem; font-family:Monaco, Consolas, monospace;\"><code style=\"font-family: monospace; font-size:0.95rem;\">docker build -t mern-frontend ./client\ndocker tag mern-frontend &lt;ECR_URI&gt;/mern-frontend:latest\ndocker push &lt;ECR_URI&gt;/mern-frontend:latest</code></pre></li></ol><img alt=\"Docker Dashboard\" src=\"https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=400&fit=crop\" style=\"max-width:100%; border-radius:0.5rem; margin:1.5rem 0; box-shadow:0 4px 6px rgba(0, 0, 0, 0.1);\"/><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Conclusion</h2><p style=\"color:#374151; font-size:1.1rem; line-height:1.7; margin-bottom:1rem;\">With Docker, deploying a full-stack MERN app becomes manageable, reproducible, and simple to scale up. You can use AWS ECS or EC2 to orchestrate these containers and take advantage of managed services.</p><blockquote style=\"border-left:4px solid #3b82f6; background-color:#eff6ff; padding:1rem; margin:1.5rem 0; font-style:italic; color:#1e40af;\"><strong>Tip:</strong> Always use environment variables for secrets. Avoid hardcoding credentials in your Dockerfiles or code.</blockquote><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Demo Video</h2><video controls width=\"100%\"><source src=\"https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_2mb.mp4\" type=\"video/mp4\">Your browser does not support the video tag.</video><h2 style=\"color:#2563eb; font-size:2rem; font-weight:600; margin-bottom:1rem; margin-top:2rem;\">Useful Links</h2><ul style=\"margin-bottom:1rem;\"><li><a href=\"https://github.com/docker/awesome-compose\" target=\"_blank\" style=\"color:#2563eb; text-decoration:underline;\">Awesome Docker Compose Examples</a></li><li><a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/what-is-ecr.html\" target=\"_blank\" style=\"color:#2563eb; text-decoration:underline;\">AWS ECR Docs</a></li></ul>"
}
